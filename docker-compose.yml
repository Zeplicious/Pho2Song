version: '3'
services:
  nginx:
    build:
      context: .
      dockerfile: docker/nginx/test.Dockerfile
    ports:
      - "8080:443"

    links:
      - node1:node1
      - node2:node2
      - api1:api1
      - api2:api2
    depends_on:
      - node1
      - node2
      - api1
      - api2
    networks:
      - app-network

  couchdb:
    build:
      context: .
      dockerfile: docker/couchdb/test.Dockerfile
    restart: always
    ports:
      - "5984:5984"
    environment:
      - INSTANCE=couchdb
      - COUCHDB_SERVER=http://couchdb:5984/
    networks:
      - backend-network
    volumes:
      - ./docker/couchdb/db_data:/opt/couchdb/data:rw

  node1:
    build:
      context: .
      dockerfile: docker/node/test.Dockerfile
    environment:
      - INSTANCE=node1
      - SOCKET_URI=https://localhost:8080/
      - SPOTIFY_URI=https://localhost:8080/spotify/callback
      - GOOGLE_URI=https://localhost:8080/google-login/callback
    ports:
      - "8888"
    networks:
      - app-network
      - backend-network
    links:
        - couchdb
  
  node2:
    build:
      context: .
      dockerfile: docker/node/test.Dockerfile
    environment:
      - INSTANCE=node2
      - SOCKET_URI=https://localhost:8080/
      - SPOTIFY_URI=https://localhost:8080/spotify/callback
      - GOOGLE_URI=https://localhost:8080/google-login/callback
    ports:
      - "8888"
    networks:
      - app-network
      - backend-network
    links:
        - couchdb

  api1:
    build:
      context: .
      dockerfile: docker/api/test.Dockerfile
    environment:
      - INSTANCE=api1
      - API_URI=https://localhost:8080/
    ports:
      - "8888"
    networks:
      - app-network
      - backend-network
    links:
        - couchdb

  api2:
    build:
      context: .
      dockerfile: docker/api/test.Dockerfile
    environment:
      - INSTANCE=api2
      - API_URI=https://localhost:8080/
    ports:
      - "8888"
    networks:
      - app-network
      - backend-network
    links:
        - couchdb
    

networks:
  app-network:
    driver: bridge
  backend-network:
    driver: bridge
